/*
 * Copyright 2015 Nicolas Rinaudo
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package kantan.csv

import kantan.csv.laws.{IllegalRow, LegalRow}
import kantan.csv.laws.discipline.{DisciplineSuite, RowCodecTests}
import kantan.csv.laws.discipline.arbitrary._
import org.scalacheck.Arbitrary

class TupleTests extends DisciplineSuite {

  [#implicit val arbLegal1: Arbitrary[LegalRow[Tuple1[[#Int#]]]] = arbLegalValueFromEnc[Seq[String], Tuple1[[#Int#]], kantan.csv.codecs.type]
  implicit val arbIllegal1: Arbitrary[IllegalRow[Tuple1[[#Int#]]]] = arbIllegalValueFromDec[Seq[String], Tuple1[[#Int#]], kantan.csv.codecs.type]
  checkAll("RowCodec[([#Int#])]", RowCodecTests[Tuple1[[#Int#]]].codec[List[String], List[Float]])

  // Currently disabled because sbt-boilerplate doesn't support platform specific source directories.
  // checkAll("RowDecoder[([#Int#])]", SerializableTests[RowDecoder[Tuple1[[#Int#]]]].serializable)
  // checkAll("RowEncoder[([#Int#])]", SerializableTests[RowEncoder[Tuple1[[#Int#]]]].serializable)#

  ]
}
